<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xianglin.appserv.common.dal.daointerface.AppRequestLogDetailDAO" >
  <resultMap id="BaseResultMap" type="com.xianglin.appserv.common.dal.dataobject.AppRequestLogDetail" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="IS_DELETED" property="isDeleted" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="COMMENTS" property="comments" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xianglin.appserv.common.dal.dataobject.AppRequestLogDetail" extends="BaseResultMap" >
    <result column="CONTENT" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
    
  <sql id="Base_Column_List" >
    ID, TYPE, REMARK, IS_DELETED, CREATE_TIME, UPDATE_TIME, COMMENTS
  </sql>
    
  <sql id="Blob_Column_List" >
    CONTENT
  </sql>
    
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from app_request_log_detail
    where ID = #{id,jdbcType=BIGINT}
  </select>
    
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from app_request_log_detail
    where ID = #{id,jdbcType=BIGINT}
  </delete>
    
  <insert id="insert" parameterType="com.xianglin.appserv.common.dal.dataobject.AppRequestLogDetail" useGeneratedKeys="true" keyProperty="id">
    insert into app_request_log_detail (ID, TYPE, REMARK, 
      IS_DELETED, CREATE_TIME, UPDATE_TIME, 
      COMMENTS, CONTENT)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      'N', NOW(), NOW(), 
      #{comments,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.xianglin.appserv.common.dal.dataobject.AppRequestLogDetail" >
    update app_request_log_detail
    <set >
      <if test="type != null" >
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        IS_DELETED = #{isDeleted,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comments != null" >
        COMMENTS = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
 
  <update id="updateByPrimaryKey" parameterType="com.xianglin.appserv.common.dal.dataobject.AppRequestLogDetail" >
    update app_request_log_detail
    set TYPE = #{type,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      IS_DELETED = #{isDeleted,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      COMMENTS = #{comments,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>
