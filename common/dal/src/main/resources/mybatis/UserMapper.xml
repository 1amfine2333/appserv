<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xianglin.appserv.common.dal.daointerface.UserDAO">
    <resultMap id="BaseResultMap" type="com.xianglin.appserv.common.dal.dataobject.User">
        <id column="ID" property="id" jdbcType="BIGINT"/>
        <result column="LOGIN_NAME" property="loginName" jdbcType="VARCHAR"/>
        <result column="PARTY_ID" property="partyId" jdbcType="BIGINT"/>
        <result column="USER_TYPE" property="userType" jdbcType="VARCHAR"/>
        <result column="DEVICE_ID" property="deviceId" jdbcType="VARCHAR"/>
        <result column="SESSION_ID" property="sessionId" jdbcType="VARCHAR"/>
        <result column="NIKER_NAME" property="nikerName" jdbcType="VARCHAR"/>
        <result column="HEAD_IMG" property="headImg" jdbcType="VARCHAR"/>
        <result column="INTRODUCE" property="introduce" jdbcType="VARCHAR"/>
        <result column="REC_USER_PARTY_ID" property="recPartyId" jdbcType="BIGINT"/>
        <result column="TRUE_NAME" property="trueName" jdbcType="VARCHAR"/>
        <result column="DESCS" property="descs" jdbcType="VARCHAR"/>
        <result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
        <result column="RY_TOKEN" property="ryToken" jdbcType="VARCHAR"/>
        <result column="PROVINCE" property="province" jdbcType="VARCHAR"/>
        <result column="CITY" property="city" jdbcType="VARCHAR"/>
        <result column="COUNTY" property="county" jdbcType="VARCHAR"/>
        <result column="TOWN" property="town" jdbcType="VARCHAR"/>
        <result column="VILLAGE" property="village" jdbcType="VARCHAR"/>
        <result column="DISTRICT" property="district" jdbcType="VARCHAR"/>
        <result column="LOCATION" property="location" jdbcType="VARCHAR"/>
        <result column="BIRTHDAY" property="birthday" jdbcType="VARCHAR"/>
        <result column="GENDER" property="gender" jdbcType="VARCHAR"/>
        <result column="STATUS" property="status" jdbcType="VARCHAR"/>
        <result column="IS_DELETED" property="isDeleted" jdbcType="VARCHAR"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="COMMENTS" property="comments" jdbcType="VARCHAR"/>
        <result column="PASSWORD_PATTERN" property="passwordPattern" jdbcType="VARCHAR"/>
        <result column="PASSWORD_PATTERN_STATUS" property="passwordPatternStatus" jdbcType="VARCHAR"/>
        <result column="showName" property="showName" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    ID, LOGIN_NAME, PARTY_ID, USER_TYPE,DEVICE_ID,SESSION_ID,NIKER_NAME,HEAD_IMG,INTRODUCE,TRUE_NAME,IFNULL(IFNULL(NIKER_NAME,TRUE_NAME),CONCAT('xl',PARTY_ID)) showName,DESCS,PASSWORD,RY_TOKEN,
    PROVINCE,CITY,COUNTY,TOWN,VILLAGE,DISTRICT,LOCATION,BIRTHDAY,REC_USER_PARTY_ID,GENDER,STATUS, IS_DELETED, CREATE_TIME, UPDATE_TIME,COMMENTS,PASSWORD_PATTERN,PASSWORD_PATTERN_STATUS
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from app_user
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from app_user
    where ID = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.xianglin.appserv.common.dal.dataobject.User">
    insert into app_user (ID, LOGIN_NAME, PARTY_ID, 
      USER_TYPE, DEVICE_ID,SESSION_ID,NIKER_NAME,HEAD_IMG,INTRODUCE,TRUE_NAME,DESCS,PASSWORD,RY_TOKEN,STATUS, IS_DELETED,
      CREATE_TIME, UPDATE_TIME,COMMENTS,REC_USER_PARTY_ID)
    values (#{id,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, #{partyId,jdbcType=BIGINT}, 
      #{userType,jdbcType=VARCHAR},#{deviceId,jdbcType=VARCHAR},#{sessionId,jdbcType=VARCHAR},#{nikerName,jdbcType=VARCHAR},#{headImg,jdbcType=VARCHAR}
      ,#{introduce,jdbcType=VARCHAR},#{trueName,jdbcType=VARCHAR},#{descs,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{ryToken,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR}, 'N',
      NOW(), NOW(),#{comments,jdbcType=VARCHAR},#{recPartyId,jdbcType=BIGINT})
  </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xianglin.appserv.common.dal.dataobject.User">
        update app_user
        <set>
            <if test="password != null">
                PASSWORD = #{password,jdbcType=VARCHAR},
            </if>
            <if test="newLoginName != null">
                LOGIN_NAME = #{newLoginName,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                USER_TYPE = #{userType,jdbcType=VARCHAR},
            </if>
            <if test="ryToken != null">
                RY_TOKEN = #{ryToken,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=VARCHAR},
            </if>
            <if test="deviceId != null">
                DEVICE_ID = #{deviceId,jdbcType=VARCHAR},
            </if>
            <if test="sessionId != null">
                SESSION_ID = #{sessionId,jdbcType=VARCHAR},
            </if>
            <if test="nikerName != null">
                NIKER_NAME = #{nikerName,jdbcType=VARCHAR},
            </if>
            <if test="headImg != null">
                HEAD_IMG = #{headImg,jdbcType=VARCHAR},
            </if>
            <if test="introduce != null">
                INTRODUCE = #{introduce,jdbcType=VARCHAR},
            </if>
            <if test="trueName != null">
                TRUE_NAME = #{trueName},
            </if>
            <if test="descs != null">
                DESCS = #{descs,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                PROVINCE = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                CITY = #{city,jdbcType=VARCHAR},
            </if>
            <if test="county != null">
                COUNTY = #{county,jdbcType=VARCHAR},
            </if>
            <if test="town != null">
                TOWN = #{town,jdbcType=VARCHAR},
            </if>
            <if test="village != null">
                VILLAGE = #{village,jdbcType=VARCHAR},
            </if>
            <if test="district != null">
                DISTRICT = #{district,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                LOCATION = #{location,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                BIRTHDAY = #{birthday,jdbcType=VARCHAR},
            </if>
            UPDATE_TIME = NOW(),
            <if test="gender != null">
                GENDER = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="passwordPattern != null">
                PASSWORD_PATTERN = #{passwordPattern,jdbcType=VARCHAR},
            </if>
            <if test="passwordPatternStatus != null">
                PASSWORD_PATTERN_STATUS = #{passwordPatternStatus,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="unBindDevice">
  	update app_user set DEVICE_ID = '',UPDATE_TIME = NOW() 
  	where DEVICE_ID = #{deviceId} and PARTY_ID != #{partyId}
  </update>
    <select id="query" resultMap="BaseResultMap" parameterType="map">
        <if test="startPage != null and pageSize !=null">
        <bind name="start" value="(startPage-1)*pageSize"/>
        </if>
        select
        <include refid="Base_Column_List"/>
        from app_user
        <where>IS_DELETED = 'N'
            <if test="partyId != null">
                and PARTY_ID = #{partyId}
            </if>
            <if test="loginName != null">
                and LOGIN_NAME = #{loginName}
            </if>
            <if test="trueName != null">
                and TRUE_NAME = #{trueName}
            </if>
            <if test="userType != null">
                and USER_TYPE = #{userType}
            </if>
            <if test="keyWords != null">
                and LOGIN_NAME = #{keyWords} or TRUE_NAME = #{keyWords} or NIKER_NAME = #{keyWords}
            </if>
            <if test="status != null">
                and STATUS = #{status}
            </if>
            <if test="likeDistrict != null">
                and DISTRICT like CONCAT('%',#{likeDistrict,jdbcType=VARCHAR},'%')
            </if>
        </where>
        order by CREATE_TIME desc
        <if test="startPage != null and pageSize !=null">
        limit #{start},#{pageSize}
        </if>
    </select>

    <select id="selectUser" resultMap="BaseResultMap" parameterType="list">
        select
        <include refid="Base_Column_List"/>
        from app_user
        <where>IS_DELETED = 'N'
                and party_id in
                <foreach collection="list" close=")" open="(" separator="," index="index" item="item">
                    #{item}
                </foreach>
        </where>
    </select>
   
    <select id="getNickNameByPartyId" parameterType="list" resultType="map">
        select party_id ,niker_name,head_img from app_user
        <where>
            is_deleted='N'
            <if test="list">
                and party_id in
                <foreach collection="list" close=")" open="(" separator="," index="index" item="item">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="selectByPartyId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from app_user
        <where>IS_DELETED = 'N'
                and PARTY_ID = #{partyId}
        </where>
    </select>

    <select id="selectByMobilePhone" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from app_user
        <where>IS_DELETED = 'N'
            and LOGIN_NAME = #{mobilePhone}
        </where>
    </select>

    <select id="selectByDeviceId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from app_user
        <where>IS_DELETED = 'N'
            and DEVICE_ID = #{deviceId}
        </where>
    </select>

    <select id="queryAnnualReport" resultType="map">
        select
        *
        from app_annual_report
        <where>IS_DELETED = 'N'
            and PARTY_ID = #{partyId}
        </where>
    </select>

    <select id="selectNewArticleUser" resultMap="BaseResultMap" parameterType="map">
        <bind name="start" value="(startPage-1)*pageSize"/>
        SELECT MAX(b.ID) ID, MAX(b.LOGIN_NAME) LOGIN_NAME, MAX(b.PARTY_ID) PARTY_ID,
        MAX(b.USER_TYPE) USER_TYPE, MAX(b.DEVICE_ID) DEVICE_ID, MAX(b.SESSION_ID) SESSION_ID,
        MAX(b.NIKER_NAME) NIKER_NAME,MAX(b.HEAD_IMG) HEAD_IMG,MAX(b.INTRODUCE) INTRODUCE,
        MAX(b.TRUE_NAME) TRUE_NAME,
        IFNULL(IFNULL(MAX(b.NIKER_NAME), MAX(b.TRUE_NAME)), CONCAT('xl', MAX(b.PARTY_ID))
        ) showName, MAX(b.DESCS) DESCS, MAX(b.PASSWORD) PASSWORD,MAX(b.RY_TOKEN) RY_TOKEN,
        MAX(b.PROVINCE) PROVINCE, MAX(b.CITY) CITY, MAX(b.COUNTY) COUNTY,MAX(b.TOWN) TOWN,
        MAX(b.VILLAGE) VILLAGE,MAX(b.DISTRICT) DISTRICT,MAX(b.LOCATION) LOCATION,
        MAX(b.BIRTHDAY) BIRTHDAY, MAX(b.REC_USER_PARTY_ID) REC_USER_PARTY_ID,MAX(b.GENDER) GENDER,
        MAX(b.STATUS) STATUS, MAX(b.IS_DELETED) IS_DELETED,MAX(b.CREATE_TIME) CREATE_TIME,
        MAX(b.UPDATE_TIME) UPDATE_TIME,MAX(b.COMMENTS) COMMENTS,MAX(b.PASSWORD_PATTERN) PASSWORD_PATTERN,
        MAX(b.PASSWORD_PATTERN_STATUS) PASSWORD_PATTERN_STATUS FROM app_user b LEFT JOIN app_article A 
        ON A.PARTY_ID = b.PARTY_ID WHERE A.IS_DELETED = 'N' AND a.ARTICLE_TYPE ='SUBJECT' AND a.GROUP_ID=0
        <if test="city != null">
            and a.CITY = #{city}
        </if>
        <if test="province != null">
            and a.PROVINCE = #{province}
        </if>
        <if test="excludePartyId != null">
            and b.PARTY_ID != #{excludePartyId}
        </if>
        and A.PARTY_ID NOT IN ( SELECT DISTINCT  (PARTY_ID) FROM app_article a  WHERE  IS_DELETED = 'Y' and GROUP_ID=0 and ARTICLE_TYPE = 'SUBJECT')
        GROUP BY a.PARTY_ID ORDER BY max(a.CREATE_TIME) DESC
         limit #{start},#{pageSize}
    </select>
    
</mapper>
